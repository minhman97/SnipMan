# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    environment: SnipMan
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Build
      run: dotnet build BackEnd/SnippetManagement.Api.sln --configuration Release    
      
    - name: Test
      run: dotnet test BackEnd/SnippetManagement.Api.sln --configuration Release --no-build --verbosity normal
      
    - name: Docker Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push backend Docker images
      uses: docker/build-push-action@v4.1.0
      with:
        file: BackEnd/Dockerfile
        context: BackEnd/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/snippet-management-api:${{ github.sha }}
        
    - name: Build and push frontend Docker images
      uses: docker/build-push-action@v4.1.0
      with:
        file: FrontEnd/snippet_management.web/Dockerfile
        context: FrontEnd/snippet_management.web/
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/snippet-management-web:${{ github.sha }}
        
    - name: Azure CLI login and deploy
      uses: Azure/cli@v1.0.7
      env:
        Ports__ApiAppPort: 5001
        Api_Image: ${{ secrets.DOCKER_USERNAME }}/snippet-management-api:${{ github.sha }}
      with:
        inlineScript: |
          echo test
          az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_APP_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az webapp create --resource-group snipman --plan ASP-snipman-b175 --name snipman --multicontainer-config-type compose --multicontainer-config-file docker-compose-prod.yml          
          
    - name: Setup backend env
      uses: Azure/cli@v1.0.7
      env:
        SETTINGS: ${{ secrets.SETTINGS_BACKEND }}
      with:
        inlineScript: |          
          echo $SETTINGS > settings.json
          cat settings.json
          az webapp config appsettings set --resource-group snipman --name snipman --settings @settings.json
